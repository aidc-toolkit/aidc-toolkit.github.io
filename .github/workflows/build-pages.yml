name: Build GitHub Pages

on:
  release:
    types:
      - published
  push:
    branches:
      - main

permissions:
  id-token: write
  pages: write

env:
  NODE_VERSION: 22
  WRITERSIDE_INSTANCE: Writerside/doc
  WRITERSIDE_ARTIFACT: webHelpDOC2-all
  WRITERSIDE_DOCKER_VERSION: 243.21565

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Dump vars
        if: vars.DUMP_VARS == 'true'
        run: |
          cat << EOF
          ${{ toJSON(vars) }}
          EOF

      - name: Dump GitHub context
        if: vars.DUMP_GITHUB_CONTEXT == 'true'
        run: |
          cat << EOF
          ${{ toJSON(github) }}
          EOF

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/

      - name: Checkout default repository (doc)
        uses: actions/checkout@v4

      - name: Build Writerside artifact
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.WRITERSIDE_INSTANCE }}
          artifact: ${{ env.WRITERSIDE_ARTIFACT }}
          docker-version: ${{ env.WRITERSIDE_DOCKER_VERSION }}

      - name: Finalize doc
        run: |
          # Enable glob expansion.
          shopt -s extglob nullglob

          # Move all except .github to doc directory.
          mkdir doc
          mv .!(|.|github) !(doc) doc/

          # Unzip artifact to pages directory
          unzip -qq doc/artifacts/${{ env.WRITERSIDE_ARTIFACT }} -d pages

      - name: Start terminal session (post doc)
        if: vars.TERMINAL_POST_DOC == 'true'
        uses: mxschmitt/action-tmate@v3

      - name: Build dev
        uses: ./.github/actions/build-project-doc
        with:
          project: dev

      - name: Build core
        uses: ./.github/actions/build-project-doc
        with:
          project: core
          link_projects: dev

      - name: Build utility
        uses: ./.github/actions/build-project-doc
        with:
          project: utility
          link_projects: dev core

      - name: Build gs1
        uses: ./.github/actions/build-project-doc
        with:
          project: gs1
          link_projects: dev core utility

      - name: Build demo
        uses: ./.github/actions/build-project-doc
        with:
          project: demo
          no_link: true
          link_projects: dev core utility gs1
          build_parameters: --outDir ../pages/demo

      - name: Start terminal session (post build)
        if: vars.TERMINAL_POST_BUILD == 'true'
        uses: mxschmitt/action-tmate@v3

      - name: Generate API documentation
        uses: ./.github/actions/build-project-doc
        with:
          project: doc
          no_link: true
          link_projects: dev
          build_parameters: --out ../pages/api

      - name: Create repository state file
        run: |
          cat > pages/repository.txt << EOF
          Date: `date`
          Ref: $GITHUB_REF
          Commit: $GITHUB_SHA
          EOF

      - name: Start terminal session (post API)
        if: vars.TERMINAL_POST_API == 'true'
        uses: mxschmitt/action-tmate@v3

      - name: Save release
        if: github.event_name == 'release'
        run: |
          # Create pages.zip in root directory then move to pages directory.
          cd pages
          zip -q -r ../pages .
          mv ../pages.zip .

          # Release is its own preview.
          unzip -qq pages.zip -d preview

      - name: Restore release
        if: github.event_name == 'push'
        run: |
          # Enable glob expansion.
          shopt -s extglob nullglob

          # Move pages to pages/preview directory.
          cd pages
          mkdir preview
          mv .!(|.) !(preview) preview/

          # Get and unzip release version.
          curl -s https://aidc-toolkit.github.io/pages.zip -o pages.zip
          unzip -qq pages.zip

      - name: Start terminal session (post release)
        if: vars.TERMINAL_POST_RELEASE == 'true'
        uses: mxschmitt/action-tmate@v3

      - name: Patch preview
        run: |
          cd pages/preview
          find . -name "*.html" -print0 | xargs -0 sed -i -e 's/https:\/\/aidc-toolkit.github.io/https:\/\/aidc-toolkit.github.io\/preview/g'

      - name: Start terminal session (post patch)
        if: vars.TERMINAL_POST_PATCH == 'true'
        uses: mxschmitt/action-tmate@v3

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload pages directory
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Start terminal session (post deploy)
        if: vars.TERMINAL_POST_DEPLOY == 'true'
        uses: mxschmitt/action-tmate@v3
